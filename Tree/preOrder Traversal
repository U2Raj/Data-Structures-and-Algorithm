/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public: 
     vector<int> res;
    vector<int> preorderTraversal(TreeNode* root) {
        
        if(root!=nullptr){
        res.push_back(root->val);
        preorderTraversal(root->left);
        preorderTraversal(root->right);
        }
        return res;

        // Iterative method
        // vector<int> res;
        // if(root == nullptr) return res;
        // stack<TreeNode*>st;
        // st.push(root);

        // while(!st.empty()){
        //     root = st.top();
        //     st.pop();
        //     if(root->right!=nullptr) st.push(root->right);
        //     if(root->left!=nullptr) st.push(root->left);
        //     res.push_back(root->val);
        // }
        //  return res;
    }
};
