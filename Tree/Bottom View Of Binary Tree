class Solution {
  public:
    vector <int> bottomView(Node *root) {
        // Your Code Here
        vector<int> ans;
        map<int,int> mp;
        
        queue<pair<Node*, int>> q;
        q.push({root,0});
        
        while(!q.empty()){
            auto p = q.front();
            q.pop();
            
            Node* temp = p.first;
            int line = p.second;
            
            mp[line] = temp->data;       //This will update the node each time it visits the vertical again and hence the last visted node would be the ans.
            if(temp->left) q.push({temp->left, line-1});
            if(temp->right) q.push({temp->right, line+1});
        }
        for(auto it : mp){
            ans.push_back(it.second);
        }
        return ans;
    }
};
