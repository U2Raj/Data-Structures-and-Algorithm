class Solution {
public:
     int t[101][101];
    bool f(int open,int idx, string& s,int n){
        if(idx == n){
            return open==0;
        }
        if(t[open][idx]!=-1) return t[open][idx];
        bool isValid = false;
        if(s[idx]=='*'){
            isValid |= f(open+1,idx+1,s,n); // * -> open bracket '('
            isValid |= f(open,idx+1,s,n);   // * -> empty string
           if(open>0) isValid |= f(open-1,idx+1,s,n); // closed bracket ')'
        }else if(s[idx]=='('){
            isValid |= f(open+1,idx+1,s,n);
        }else if(open>0){
            isValid |= f(open-1,idx+1,s,n);
        }
        return t[open][idx] =  isValid;
    }
    bool checkValidString(string s) {
        //Memoization
        int open=0;
        int n = s.size();
        memset(t,-1,sizeof(t));
        return f(open,0,s,n);
    }
};