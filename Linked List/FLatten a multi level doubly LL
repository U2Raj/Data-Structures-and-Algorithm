/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* prev;
    Node* next;
    Node* child;
};
*/

class Solution {
public:
    Node* flatten(Node* head) {

        if(head==nullptr) return head;  //Base Case
        
        Node* curr = head;

        while(curr!=nullptr){
            if(curr->child!=nullptr){

                //flatten a linkedList
                Node* next = curr->next;
                curr->next = flatten(curr->child);

                curr->next->prev = curr;
                curr->child=nullptr;
          
                //Finding The tail
                while(curr->next!=nullptr){
                    curr = curr->next;
                }

                //Attach tail with next pointer
                if(next!=nullptr){
                curr->next = next;
                next->prev = curr;
                }
            }
            curr = curr->next;
        }
        return head;
    }
};
