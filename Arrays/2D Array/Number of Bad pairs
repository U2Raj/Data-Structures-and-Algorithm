class Solution {
public:
    long long countBadPairs(vector<int>& nums) {
        long long badPairs = 0;
        long long n = nums.size();
        
        // Transform nums[i] to nums[i] - i
        for (long long i = 0; i < n; i++) {
            nums[i] -= i;
        }

        unordered_map<long long, long long> freqMap;
        
        // Iterate through nums to count bad pairs
        for (long long j = 0; j < n; j++) {
            long long totalPairs = j;  // Pairs formed with previous elements
            long long goodPairs = freqMap[nums[j]]; // Count of good pairs
            badPairs += (totalPairs - goodPairs); // Compute bad pairs
            freqMap[nums[j]]++; // Update frequency map
        }

        return badPairs;
    }
};
